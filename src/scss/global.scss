* {
    margin: 0; 
    padding: 0; 
    box-sizing: border-box; 
}

html {
    font-size: 62.5%;
}

a {
    text-decoration: none;
    display: inline-block;

    &:hover {
        text-decoration: underline;
    }
}
li {
    list-style: none;
}
label {
    display: inline-block;
}
body {
      background-color: #101012;
      font-family: "Manrope", sans-serif, Roboto;
      color: white;
}
img {
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
}
input {
    white-space: pre-wrap;
    word-wrap: break-word;
}
textarea {
    border: none; /* Remove border */
    padding: 0; /* Remove padding */
    margin: 0; /* Remove margin */
    resize: none; /* Disable resizing */
    outline: none; /* Remove outline when focused */
    background-color: transparent;
    color: rgb(var(--textColor1), 1);
    font-family: "Manrope", sans-serif, Roboto;
    white-space: pre-wrap;
    word-wrap: break-word;
    white-space: pre-wrap;
    /* Add any additional styling you want */
}

/* Custom Fonts */
@font-face {
    font-family: 'Apercu Medium';
    font-style: normal;
    src: url("/src/fonts/Apercu\ Medium.woff2") format('woff2');
}
@font-face {
    font-family: 'Apercu Bold';
    font-style: normal;
    src: url("/src/fonts/Apercu\ Bold.woff2") format('woff2');
}
@font-face {
    font-family: 'Gordita Medium';
    font-style: normal;
    src: url("/src/fonts/Gordita\ Medium.woff2") format('woff2');
}

/*
    TODO:  Keep, elipses: position, media queries, 
*/

/* Breakpoints Variables anad Corresponding Mixins */
$screen-mobile-s: 20em;       // mobile small (320px)
$screen-mobile-m: 23.438em;   // mobile medium (375px)
$screen-mobile-l: 26.563em;   // mobile large (425px)
$screen-tablet: 48em;         // tablet (768px)
$screen-laptop: 60em;         // laptop (1024px)
$screen-laptop-l: 90em;       // laptop large (1440px)

@mixin mobile-s($property){
    @media (#{$property}: #{$screen-mobile-s}) {
        @content;
    }
 }
@mixin mobile-m($property) {
    @media (#{$property}: #{$screen-mobile-m}) {
        @content;
    }
 }
@mixin mobile-l($property) {
    @media (#{$property}: #{$screen-mobile-l}) {
        @content;
    }
 }
@mixin tablet($property) {
    @media (#{$property}: #{$screen-tablet}) {
        @content;
    }
 }
@mixin laptop($property) {
    @media (#{$property}: #{$screen-laptop}) {
        @content;
    }
 }
@mixin laptop-l($property) {
    @media (#{$property}: #{$screen-laptop-l}) {
        @content;
    }
 }

$screen-sm: 37.5em;    // small (600 px)
$screen-md: 56.25em;   // medium (900 px)
$screen-lg: 75em;      // large (1200 px)
$screen-xl: 112.5em;   // extra large (1800 px)

@mixin mq-custom($property, $screen-sz) {
    @media (#{$property}: #{$screen-sz}) {
        @content;
    }
 }
@mixin sm($property) {
    @media (#{$property}: #{$screen-sm}) {
        @content;
    }
 }
@mixin md($property) {
    @media (#{$property}: #{$screen-md}) {
        @content;
    }
 }
@mixin lg($property) {
    @media (#{$property}: #{$screen-lg}) {
        @content;
    }
 }
@mixin xl($property) {
    @media (#{$property}: #{$screen-xl}) {
        @content;
    }
 }

 /* Global Mixins */
@mixin flex($vert-spacing, $hoz-spacing: _) {
    display: flex;

    @if $vert-spacing != _ {
        align-items: $vert-spacing;
    }
    @if $hoz-spacing != _ {
        justify-content: $hoz-spacing;
    }
 }

/* Reusable Stylings */
@mixin center {
    @include flex(center, center);
}

@mixin circle($diameter) {
    height: $diameter;
    width: $diameter;
    aspect-ratio: 1 / 1;
    border-radius: 100%;
}

@mixin elipses-overflow {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    min-width: 0px;
}

@mixin multi-line-elipses-overflow($line_number) {
    display: -webkit-box;
    -webkit-line-clamp: $line_number;
    -webkit-box-orient: vertical;
    overflow: hidden;
}
@mixin trans-text($color, $opacity) {
    color: $color;
    opacity: $opacity;
}

@mixin abs-center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
@mixin pos-abs-bottom-right-corner($bottom: 0, $right: 0) {
    position: absolute;
    right: $right;
    bottom: $bottom;

    @include pos-center-helper($bottom, $right)
}
@mixin pos-abs-top-right-corner($top: 0, $right: 0) {
    position: absolute;
    top: $top;
    right: $right;

    @include pos-center-helper($top, $right)
}
@mixin pos-abs-top-left-corner($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;

    @include pos-center-helper($top, $left)
}
@mixin pos-abs-bottom-left-corner($bottom: 0, $left: 0) {
    position: absolute;
    bottom: $bottom;
    left: $left;

    @include pos-center-helper($bottom, $left)
}
@mixin pos-center-helper($top-bottom, $right-left) {
    @if $top-bottom == 50% {
        transform: translateY((-50%));
    }
    @if $right-left == 50% {
        transform: translateX((-50%));
    }
}

.text-aln-center {
    text-align: center;
}

.elipses-overflow {
    @include elipses-overflow;
}

.show-block {
    display: block !important;
}

.show-flex {
    display: flex !important;
}

.hide {
    display: none !important;
}

/* Animations */

/* Icons */
.icon {
    height: 13px;
    width: 13px;
    display: block;

    &--home-toggle-right {
        content: url('double-arrow-right.svg');
    }
    &--home-toggle-left {
        content: url('double-arrow-left.svg');
    }
 }

/* Line Divider */
.divider {
    opacity: 0.7;
    width: 100%;
    height: 1px;
    margin-top: 8px;

    &--vertical {
        width: 1px;
        height: 100%;
    }
    &--thin {
        height: 0.5px;
    }
    &--top {
        position: absolute;
        top: 0px;
    }
    &--bottom {
        position: absolute;
        bottom: 0px;
    }
}

.flx {
    display: flex;
    &--algn-center {
        align-items: center;
    }
    &--algn-start {
        align-items: flex-start;
    }
    &--algn-end {
        align-items: flex-end;
    }
    &--algn-baseline {
        align-items: baseline;
    }
    &--justify-center {
        justify-content: center;
    }
    &--space-between {
        justify-content: space-between;
    }
    &--right {
        justify-content: flex-end;
    }
}

.abs-bottom-right {
    position: absolute;
    bottom: 0px;
    right: 0px;

    &--padded-lg {
        bottom: 20px;
        right: 20px;
    }
}

.vert-scroll {
    overflow-y: scroll;
}
.hoz-scroll {
    display: flex;
    overflow-x: scroll;
}

.hoz-scroll, .vert-scroll {
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.vert-scroll::-webkit-scrollbar {
    display: none;
}
.hoz-scroll::-webkit-scrollbar {
    display: none;
}



.pos-relative {
    position: relative;
}
.password-text {
    -webkit-text-security: disc;
    -moz-text-security: disc;
}


@mixin color-btn-styling {
    transition: 0.12s ease-in-out;
    
    &:focus {
        filter: brightness(1.1);
    }
    &:hover {
        filter: brightness(1.1);
    }
}
@mixin trans-btn-dark-styling {
    &:focus {
        background-color: rgba(50, 50, 50, 0.2) !important;
    }
    &:hover {
        background-color: rgba(45, 45, 45, 0.3) !important;
    }
}
@mixin trans-btn-light-styling {
    &:focus {
        background-color: rgba(180, 180, 180, 0.14) !important;
    }
    &:hover {
        background-color: rgba(190, 190, 190, 0.15) !important;
    }
}
@mixin unfill-btn-ficus-styling($color-var) {
    &:focus {
        background-color: rgba($color-var, 0.2);
    }
}

@mixin text-style($opacity: _, $weight: _, $size: _, $font: _) {
    @if $opacity != _ {
        color: rgb(var(--textColor1), $opacity);
    }
    @if $size != _ {
        font-size: $size;
    }
    @if $weight != _ {
        font-weight: $weight;
    }
    @if $font != _ {
        font-family: $font;
    }
}

/* Buttons unfill unfill--oval | fill | no-bg | text-only | icon-only | text-icon */
button, input {
	all: unset;
}
button {
    font-weight: 600;
    font-size: 0.95rem;
    cursor: pointer;
    transition: 0.12s ease-in-out;

    &:active {
        transform: scale(0.98);
    }
    &:disabled {
        opacity: 0.3;
    }
}
button:focus {
    outline: 2px blue;
}

button.icon {
    padding: 5px;
}

@mixin tab-btn-light() {
    &:hover {
        filter: brightness(0.96);
    }
    &--selected {
        &:hover {
            filter: brightness(1.08);
        }
    }
}

button.tab-btn {
    background-color: (var(--tabColor));
    @include text-style(0.55);
    border-radius: 15px;
    padding: 3px 12px;
    transition: 0.1s ease-in-out;
    white-space: nowrap;
    margin-right: 4px;
    font-size: 1.15rem;
    font-weight: 400;
    @include center;

    &:focus {
        filter: brightness(1.4);
    }
    &:hover {
        filter: brightness(1.4);
    }
    &:active {
        transform: scale(0.985);
    }
    &--txt-only {
        background-color: transparent;
        padding: 0px;
        margin-right: 14px;
        transition: 0.1s ease-in-out;
        @include text-style(0.4, 300, 1.35rem);

        &:hover {
            @include text-style(0.9);
        }
        &:active {
            transform: scale(0.97);
        }
    }
    &--txt-only-selected {
        box-shadow: none;
        background-color: transparent;
        @include text-style(0.9);
    }
    &--selected {
        background-color: var(--tabHighlightColor);
        box-shadow: var(--tabHighlightBoxShadow);
        color: var(--bentoBoxBgColor);

        &:hover {
            filter: brightness(1);
        }
        &:focus {
            filter: brightness(1);
        }
    }
}
 button.unfill {
    border: solid 1.15px rgb(var(--fgColor2));
    color: rgb(var(--fgColor2));
    background-color: transparent;
    transition: 0.1s ease-in-out;
    @include center;

    &:hover {
        background-color: rgb(var(--fgColor2));
        color: rgb(var(--textColor2));
    }
    &:active {
        transform: scale(0.98);
    }
    &:disabled {
        &:hover {
            color: rgb(var(--fgColor2));
            background: none;
        }
    }

    &--padded {
        padding: 6px 16px 6px 16px;
    }
    &--oval {
        border-radius: 15px;
    }
    &--rectangle {
        border-radius: 4px;
    }
    &--gray {
        border: solid 1.15px rgba(150, 150, 150, 0.7);
        color: rgba(150, 150, 150, 0.7);
        
        &:hover {
            background-color: rgba(150, 150, 150, 0.7) !important;
            border-color: transparent !important;
            color: var(--modalBgColor) !important;
        }
    }
}
button.text-only {
    border-radius: 15px;
    font-weight: 600;
    font-size: 0.95rem;
    transition: 0.1s ease-in-out;
    color: rgb(var(--textColor1), 0.5);

    &:active {
        transform: scale(0.99);
    }
    &:focus {
        color: rgb(var(--textColor1), );
    }
    &:hover {
        color: rgb(var(--textColor1), 1);
    }

    &--light {
        color: rgb(var(--textColor1), 1);

        &:hover {
            color: rgb(var(--textColor1), 0.5);
        }
    }
}

@mixin settings-btn--light {
    background-color: rgb(var(--textColor1), 0.04);

    &:hover {
        background-color: rgb(var(--textColor1), 0.08);
    }
}

button.settings-btn {
    @include circle(22px);
    @include center;
    background-color: rgb(var(--textColor1), 0.04);
    
    &:active {
        transform: scale(0.94);
    }
    &:hover {
        background-color: rgb(var(--textColor1), 0.08);
    }
}
 
 /* Tool Tip */
 .tool-tip-text {
     // left: 50px;
    position: absolute;
    padding: 8px 15px 8px 13px;
    border-radius: 10px;
    opacity: 0;
    visibility: hidden;
    font-size: 1rem;
    font-family: "Manrope";
    font-weight: 800;
    text-align: center;
    transition: all 0.1s ease-in-out;
    pointer-events: none;
    filter: brightness(1.05);


    // pointing left
    &--left {
        left: 50px;
        &::after {
            bottom: 10px;
            left: -0.2px;
        }
    }

    // triangle pointer
    &::after {
        height: 8px;
        width: 8px;
        position: absolute;
        content: "";
        transform: translate(-50%) rotate(45deg);
        opacity: 100;
        visibility: hidden;
        // bottom: 10px;
        // left: 2px;
        transition: all 0.1s ease-in-out;
    }
 }

 @mixin tool-tip-shown($bg-color) { // styling for the tool tip parent container and the tool tip bg
     opacity: 100;
     visibility: visible;
     background: $bg-color;
     color: white;
 }

/* Custom Input Range */
.input-range {
    width: 100%;
    top: 0px;
    height: 4px;
    cursor: pointer;
    background-color: black;
    transition: ease-in-out 0.1s;
    border-radius: 20px;

    &:hover {
       height: 5px;
    }
    
    // thumb
    &::-webkit-slider-thumb {
        transition: ease-in-out 0.1s;
        width: 0px;
        height: 0px;
        -webkit-appearance: none;
        appearance: none;
        background-color: white;

        &:hover {
            cursor: grab;
        }
        &:active {
            cursor: grabbing;
        }
    }
    &::-moz-range-thumb  {
        transition: ease-in-out 0.1s;
        width: 0px;
        height: 0px;
        -webkit-appearance: none;
        appearance: none;
        background-color: white;

        &:hover {
            cursor: grab;
        }
        &:active {
            cursor: grabbing;
        }
    }
    &:hover::-moz-range-thumb {
        @include circle(10px);
    }
    &:hover::-webkit-slider-thumb {
        @include circle(10px);
    }
    &:active::-moz-range-thumb {
        cursor: grabbing;
    }
    &:active::-webkit-slider-thumb {
        cursor: grabbing;
    }

    &--show-thumb {
        &:hover {
            height: 3px;
        }
        &::-webkit-slider-thumb {
            @include circle(9px);
        }
        &::-moz-range-thumb  {
            @include circle(9px);
        }
    }
  }

/* Icons */
 .text-icon-1 {
    @include center;
    width: 100%;
    border-radius: 8px;
    box-shadow: 3px 3px 4px rgba(0, 0, 0, 0.07);
    background: #1E1E22; 
    padding: 10px 0px;
    font-weight: 700;
    transition: ease-in-out 0.1s;
    margin-bottom: 20px 0px 10px 0px;
    &:hover {
        background: #272427;
    }
    &:active {
        background: rgb(51, 48, 48); 
    }
 }

.abs-center {
    @include abs-center();
}

$bento-box-border-radius: 12px;
$bento-box-padding: 8px;

@mixin bento-box-light {
    &__title {
    }
    &__subtitle {
        font-size: 1.04rem;
        font-weight: 600;
        color: rgb(var(--textColor1), 0.7);
    }
    &__subheading {
        font-weight: 600;
        color: rgb(var(--textColor1), 0.9);
    }
    &__copy {
        font-weight: 500;
        color: rgb(var(--textColor1), 0.5);
    }
}

.bento-box {
    border-radius: $bento-box-border-radius;
    padding: 15px 25px 17px 25px;
    background-color: var(--bentoBoxBgColor);
    border: var(--bentoBoxBorder);
    box-shadow: var(--bentoBoxShadow);
    color: rgb(var(--textColor1));

    &--no-padding {
        padding: 0px;
    }

    &__header {
        @include flex(center, space-between);
    }
    &__title {
        margin-bottom: 6px;
        font-size: 1.3rem;
        font-weight: 600;
    }
    &__subtitle {
        font-size: 1.04rem;
        color: rgb(var(--textColor1), 0.5);
    }
    &__subheading {
        font-size: 1.3rem;
        font-weight: 500;
    }
    &__copy {
        margin-bottom: 15px;
        font-weight: 300;
        font-size: 1.1rem;
        color: rgb(var(--textColor1), 0.6);
    }
}

@mixin blurred-bg-subtitle-text($opacity) {
    color: rgb(var(--textColor2));
    opacity: $opacity;
}


/* Modal */
$settings-modal-padding: 20px 25px 25px 25px;

.modal {
    position: relative;
    &--content {
        overflow: hidden;
    } 
}

@mixin modal-bg-light {
    &__content {
        &-title {
            font-weight: 600;
        }
        &-subheading {
            font-size: 1.3rem;
            font-weight: 600;
            color: rgba(var(--textColor1), 0.8);
        }
        &-copy {
            font-weight: 500;
            color: rgba(var(--textColor1), 0.5);
        }
    }
}

.modal-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3100004;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.8);

    &__content {
        position: relative;
        max-width: 90%;
        max-height: 90%;
        overflow: hidden;
        background-color: var(--modalBgColor);
        color: rgb(var(--textColor1));
        
        &-title {
            font-size: 1.7rem;
            font-weight: 500;
        }
        &-subheading {
            font-size: 1.3rem;
            font-weight: 500;
            color: rgba(var(--textColor1), 0.8);
        }
        &-copy {
            margin-top: 8px;
            font-size: 1.2rem;
            font-weight: 400;
            color: rgba(var(--textColor1), 0.6);
        }
    }
} 

@function darken($color, $amount) {
    @return mix(black, $color, $amount);
}

@keyframes fade-in {
    0% {
        transform: translateY(-5px);
        visibility: hidden;
        opacity: 0;
    }
    100% {
        transform: translateY(0px);
        visibility: visible;
        opacity: 1;
    }
}

.strike {
    position: relative; 

    &::after {
        content: ' ';
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        height: 1px;
        background: rgba(var(--textColor1), 0.5);
    }
    
    &--animated {
        &::after {
            animation: 0.22s strike ease-in-out forwards 1;
        }
    }
}

@mixin divider($color, $height: 0.5px, $width: 100%) {
    width: $width;
    height: $height;
    background-color: $color;
}

@mixin visible($opacity: 1) {
    opacity: $opacity;
    visibility: visible;
}

@mixin text-color($opacity: 1, $type: "text") {
    @if $type == "stroke" {
        stroke: rgba(var(--textColor1), $opacity);
    }
    @else if $type == "background" {
        background: rgba(var(--textColor1), $opacity);
    }
    @else if $type == "background-color" {
        background-color: rgba(var(--textColor1), $opacity);
    }
    @else {
        color: rgba(var(--textColor1), $opacity);
    }
}

.hidden {
    display: none;
}

@mixin not-visible {
    opacity: 0;
    visibility: hidden;
}

@keyframes strike {
    0%   { 
        width : 0; 
    }
    100% { 
        width: 100%; 
    }
}

@mixin hov-opacity($before: 0.5, $after: 1, $length: 0.14s) {
    opacity: $before;
    transition: $length ease-in-out;

    &:hover {
        opacity: $after;
    }
}

.scroll-bar-hidden {
    &::-webkit-scrollbar {
        display: none;
    }
}

.full-opacity {
    opacity: 1 !important;
}